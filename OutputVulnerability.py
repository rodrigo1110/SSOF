class OutputVulnerability:

    """ def __init__(self,identifier,source,sink,unsanitized_flag,sanitized_flows):
        self.identifier = identifier
        self.source = source
        self.sink = sink
        self.unsanitized_flag = unsanitized_flag
        self.sanitized_flows = sanitized_flows
        

    def __init__(self,other,n):
        if not isinstance(other, OutputVulnerability):
            return NotImplemented
        self.identifier = other.identifier  + "_" + str(n)
        self.source = source
        self.sink = sink
        self.unsanitized_flag = unsanitized_flag
        self.sanitized_flows = sanitized_flows """

    def __init__(self, *args):
        if(len(args) == 5):
            self.identifier = args[0]
            self.source = args[1]
            self.sink = args[2]
            self.unsanitized_flag = args[3]
            self.sanitized_flows = args[4]
        elif(len(args) == 2):
            self.identifier = args[0].identifier  + "_" + str(args[1])
            self.source = args[0].source
            self.sink = args[0].sink
            self.unsanitized_flag = args[0].unsanitized_flag
            self.sanitized_flows = args[0].sanitized_flows
        
    
    
    def toString(self):
        print("-----Vulnerability identified----")
        print("Vulnerability:", self.identifier)
        print("Source:", self.source)
        print("Sink:", self.sink)
        print("Unsanitized Flows:", self.unsanitized_flag)
        print("Sanitized Flows:", self.sanitized_flows)

    def __eq__(self, other): 
        if not isinstance(other, OutputVulnerability):
            return NotImplemented

        return self.identifier == other.identifier and self.source == other.source and self.sink == other.sink