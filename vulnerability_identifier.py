#Code for identifying vulnerabilites in program slice by comparing correspondent flow graph to vulnerabilities recieved as 2nd argument
import itertools
from Pattern import Pattern
from OutputVulnerability import OutputVulnerability
from FlowGraph import FlowGraph
from Tainted import Tainted

vulnerabilities = []



def get_contained(list1, list2):
    finalList = []
    for el in list1:
        if el in list2:
            finalList.append(el)
    return finalList
    

def getOriginalSource(listTainted, tainted):
    for taint in listTainted:
        if(tainted.origin in taint.taintedList):
            return getOriginalSource(listTainted, taint)
    return tainted.origin


def getIndex(list1,value):
    for i in range(0,len(list1)): 
        if(list1[i] == value):
            return i 
    

def getBiggest(list1):
    biggest = 0
    for i in range(0,len(list1)) :
        if(list1[i] > biggest):
            biggest = list1[i]
    return biggest


    
def identifyVulnerabilities(flowGraph, patterns):
    paths = flowGraph.getPaths()    
    identifiedVulnerabilities = []
    toReturnVulnerabilities = []
    taintedMatrixFinal = [[]]
    
    flag = False
    i=0
    i_path = 0
    for pattern in patterns:
        for path in paths:
            toAdd = []
            sourcesPath = get_contained(path, pattern.sources)
            sanitizersPath = get_contained(path, pattern.sanitizers)
       
            for el3 in taintedMatrixFinal[i]: 
                for el4 in get_contained(path, el3.taintedList):
                    if((el4 not in pattern.sources) and (el4 not in sourcesPath) and (el4 not in pattern.sanitizers)): 
                       sourcesPath.append(el4)                                                                      
                                                                                                                           
            sinksPath = get_contained(path,pattern.sinks) 
            if(len(sourcesPath) != 0):          
                for el in path: 
                    if((el != 'root') and (el not in pattern.sources) and (el not in pattern.sanitizers)):  
                        toAdd.append(el)
                                     
                for source in sourcesPath: 
                    toAdd2 = []
                    for el5 in toAdd:
                        if(getIndex(path,el5) > getIndex(path,source)):
                            toAdd2.append(el5)
                    
                    certifiedSanitizers = []
                    for el6 in sanitizersPath:
                        if(getIndex(path,el6) > getIndex(path,source)):
                            certifiedSanitizers.append(el6)
                   
                    flag = False
                    for tainted in taintedMatrixFinal[i]:
                        if(source == tainted.origin):                                   
                            for el2 in toAdd2:
                                if(el2 not in tainted.taintedList and el2 != tainted.origin): 
                                    tainted.taintedList.append(el2)
                                    index = getIndex(tainted.taintedList,el2)
                                    no_copy = []
                                    no_copy = no_copy.extend(certifiedSanitizers)
                                    if(no_copy is None):
                                        no_copy = []
                                    tainted.sanitizedList.append(no_copy)
                                else:
                                    index2 = getIndex(tainted.taintedList,el2)
                                    if(tainted.sanitizedList[index2] != []):
                                        if(certifiedSanitizers == []):
                                            tainted.sanitizedList[index2] = certifiedSanitizers
                                        else:
                                            for el7 in certifiedSanitizers:
                                                if(el7 not in tainted.sanitizedList[index2]):
                                                    tainted.sanitizedList[index2].append(el7)

                            flag = True
                            break

                    if(flag == False): 
                        toAdd3 = []
                        for el2 in toAdd2:
                            if(el2 != source): 
                                toAdd3.append(el2)
        
                        if(len(toAdd3)!=0):
                            taintedMatrixFinal[i].append(Tainted(source,toAdd3,[]))  
                            for v in range(0,len(toAdd3)):
                                no_copy = []
                                no_copy.extend(certifiedSanitizers)
                                if(no_copy is None):
                                    no_copy = []
                        
                                taintedMatrixFinal[i][-1].sanitizedList.append(no_copy)
                                
            i_path += 1                      
        i += 1
        taintedMatrixFinal.append([])              
        flag = False


    i = 0
    n = 1
    for pattern in patterns:                                                        
        for path in paths:
            sources_in_path = get_contained(path, pattern.sources)
            sinks_in_path = get_contained(path, pattern.sinks)
            sanitizers_in_path = get_contained(path, pattern.sanitizers)
            
            certifiedSanitizers = [] 
            certifiedSinks = [[]]
            count = 0
            for sourcee in sources_in_path: 
                for sinkk in sinks_in_path:   
                    if(getIndex(path,sinkk) > getIndex(path,sourcee)):
                        certifiedSinks[count].append(sinkk)
                if(count != (len(sources_in_path) - 1)):
                    certifiedSinks.append("[]")
                count += 1

            for sanitizer in sanitizers_in_path: 
                for source in sources_in_path:
                    for sink in sinks_in_path:
                        if(getIndex(path,sink) > getIndex(path,sanitizer) > getIndex(path,source)): 
                            certifiedSanitizers.append(sanitizer)               
               
            curr = 0
            if(len(sinks_in_path) != 0):  
                    for el in path:                                                
                        for tainted in taintedMatrixFinal[i]:
                            toAddCertified = []
                            if((el in tainted.taintedList) and (tainted.origin not in sources_in_path)):  
                                index = getIndex(tainted.taintedList,el)
                                comp = len(tainted.sanitizedList[index])
                                
                                no_copy = []
                                no_copy.extend(tainted.sanitizedList[index]) 
                                                       
                                originalSource = getOriginalSource(taintedMatrixFinal[i],tainted)           
                                if(originalSource not in sources_in_path): 
                                    
                                    for sink in sinks_in_path:                         
                                        if(getIndex(path,sink) >= getIndex(path,el)): 
                                            toAddCertified.append(sink)

                                    if(len(toAddCertified) != 0):
                                        if(len(certifiedSinks[0]) == 0):
                                            certifiedSinks.pop(0)
                                        certifiedSinks.append(toAddCertified)

                                    sources_in_path.append(originalSource)                                  
                                                            
                                if((no_copy not in certifiedSanitizers) and (no_copy != [])): 
                                    for sinkList in certifiedSinks:
                                        for element in sinkList:
                                            if(getIndex(path,el) <= getIndex(path,element)):
                                                certifiedSanitizers.append(no_copy) 
                                                       
            if(certifiedSanitizers == []):
                certifiedSanitizers = [[]]
            count = 0
            for source in sources_in_path:  
                for sink in certifiedSinks[count]:
                    flagAppend = True
                    if(certifiedSanitizers == [[]]):
                        vuln = OutputVulnerability(pattern.vulnerability, source, sink, "yes", [[]])
                    else:
                        vuln = OutputVulnerability(pattern.vulnerability, source, sink, "no", [certifiedSanitizers[count]])
                    
                    for vulnerability in identifiedVulnerabilities:
                        if(vuln == vulnerability):          
                            if(vulnerability.unsanitized_flag == "no"):
                                vulnerability.unsanitized_flag = vuln.unsanitized_flag
                            
                            for ell in vuln.sanitized_flows:
                                if(ell not in vulnerability.sanitized_flows and ell != []):
                                    if(vulnerability.sanitized_flows[0] == []):
                                        vulnerability.sanitized_flows.pop(0)
                                        
                                    vulnerability.sanitized_flows.append(ell)
                            
                            flagAppend = False                          
                    
                    if(flagAppend):
                        identifiedVulnerabilities.append(vuln)
                        vulnToReturn = OutputVulnerability(vuln,n)
                        n += 1
                        toReturnVulnerabilities.append(vulnToReturn)
                count += 1
        i += 1    
        n = 1

    return toReturnVulnerabilities
